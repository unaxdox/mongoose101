<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Ikasleak API</title>
    <script>
        async function fetchIkasleak() {
            try {
                const response = await fetch('/api/ikasleak');
                if (!response.ok) throw new Error('Failed to fetch ikasleak');
                const data = await response.json();
                document.getElementById('ikasleak').innerText = JSON.stringify(data, null, 2);

                // Populate combobox for editing
                const combobox = document.getElementById('ikasleCombo');
                combobox.innerHTML = `<option value="" disabled selected>Choose an ikasle</option>`;
                data.forEach(ikasle => {
                    const option = document.createElement('option');
                    option.value = ikasle._id;
                    option.textContent = ikasle.email;
                    combobox.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching ikasleak:', error);
            }
        }

        async function createIkasle() {
            try {
                const izena = document.getElementById('izena').value;
                const adina = document.getElementById('adina').value;
                const email = document.getElementById('email').value;

                const response = await fetch('/api/ikasleak', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ izena, adina, email }),
                });

                if (!response.ok) throw new Error('Failed to create ikasle');
                const data = await response.json();
                document.getElementById('newIkasle').innerText = JSON.stringify(data, null, 2);

                // Refresh ikasleak after creation
                fetchIkasleak();
            } catch (error) {
                console.error('Error creating ikasle:', error);
            }
        }

        async function editIkasle() {
            try {
                const id = document.getElementById('ikasleCombo').value;
                const body = {
                    izena: document.getElementById('editIzena').value,
                    adina: parseInt(document.getElementById('editAdina').value, 10),
                    email: document.getElementById('editEmail').value,
                };

                const response = await fetch(`/api/ikasleak/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(body),
                });

                if (!response.ok) throw new Error('Failed to edit ikasle');
                const data = await response.json();
                document.getElementById('editedIkasle').innerText = JSON.stringify(data, null, 2);

                // Refresh ikasleak after editing
                fetchIkasleak();
            } catch (error) {
                console.error('Error editing ikasle:', error);
            }
        }

        async function deleteIkasle() {
            const id = document.getElementById("deleteId").value;

            const response = await fetch(`/api/ikasleak/${id}`, {
                method: "DELETE",
            });

            const data = await response.json();
            document.getElementById("deletedIkasle").innerText = JSON.stringify(
                data,
                null,
                2
            );
             fetchIkasleak();
        }

    </script>
</head>

<body>
    <h1>Test Ikasleak API</h1>

    <button onclick="fetchIkasleak()">Get Ikasleak</button>
    <pre id="ikasleak"></pre>

    <h2>Create Ikasle</h2>
    <form onsubmit="event.preventDefault(); createIkasle();">
        <label for="izena">Izena:</label>
        <input type="text" id="izena" name="izena" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="adina" name="adina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newIkasle"></pre>

    <h2>Ezabatu Ikasle Bat</h2>
    <form onsubmit="event.preventDefault(); deleteIkasle();">
        <input type="text" id="deleteId" placeholder="Ikaslearen IDa" required>
        <button type="submit">Ezabatu</button>
    </form>
    <pre id="deletedIkasle"></pre>

    <h2>Editatu Ikasle Bat</h2>
    <form onsubmit="event.preventDefault(); editIkasle();">
        <label for="ikasleCombo">Ikasle bat aukeratu:</label>
        <select id="ikasleCombo" required>
            <option value="" disabled selected>Choose an ikasle</option>
        </select>
        <br>

        <label for="editIzena">Izena:</label>
        <input type="text" id="editIzena" name="editIzena" required>
        <br>

        <label for="editAdina">Adina:</label>
        <input type="number" id="editAdina" name="editAdina" required>
        <br>

        <label for="editEmail">Email:</label>
        <input type="email" id="editEmail" name="editEmail" required>
        <br>
        
        <button type="submit">Edit</button>
    </form>
    <pre id="editedIkasle"></pre>
</body>

</html>